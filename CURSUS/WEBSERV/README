
- el ejecutable debe ser: ./webserv

- se puede usar: select(), kqueue(), epoll()

- lea la RFC y realice pruebas con telnet y NGINX antes de
iniciar este proyecto.

### REQUISITOS

- Debe pedir un archivo de configuración como argumento o usar una ruta
    - Contiene directivas y parámetros para la ejecución del contenedor

- no puedes ejecutar execve ni usar otro servidor web
- Debe permanecer sin bloqueos
- Debe gestionar adecuadamente las conexiones de los clientes cuando sea
  necesario
- Debe ser no bloqueante y usar solo 1 poll() o equivalente para todas
  las operaciones entre cliente y servidor 
- poll() o equiv. debe controlar tanto lectura como escritura simultaneamente
- No debe relizar lectura o escritura sin para por poll() o equiv.
- No se puede comprobar el valor de errno después de leer o escribir
- No es necesario utilizar poll() antes de leer el archivo de configuracion
- Dado que tienes que usar descriptores de fichero no bloqueantes, es
  posible usar funciones de lectura/recv o escritura/envío sin poll()
  (o equivalente), y tu servidor no estaría bloqueante.
  Pero consumiría más recursos del sistema.
  Por lo tanto, si intentas leer/recv o escribir/enviar en cualquier descriptor de archivo
  sin usar poll() (o equivalente), tu calificación será es 0.
- Puedes utilizar todas las macros y definiciones como FD_SET, FD_CLR, FD_ISSET y, FD_ZERO
- Una solicitud a su servidor nunca debe colgar indefinidamente
- El servidor debe ser compatible con buscadores estandard
- Consideraremos que NGINX es compatible con HTTP 1.1 y puede utilizarse para comparar las cabeceras
  y los comportamientos de respuesta
- Sus códigos de estado de respuesta HTTP deben ser precisos.
- Su servidor debe tener páginas de error por defecto si no se proporciona ninguna.
- No puedes usar fork para nada que no sea CGI (como PHP, o Python, etc.).
- Debe ser capaz de servir un sitio web totalmente estático.
- los clientes deben subir archivos
- Necesita al menos los métodos GET, POST y DELETE.
- Realice pruebas de estrés a su servidor para asegurarse de que permanece disponible en todo momento.
- El servidor debe poder escuchar en varios puertos (véase el archivo de     configuración).
- 